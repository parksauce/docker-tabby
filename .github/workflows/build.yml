name: Build and Push Docker Hub & GitHub Container Repository

on:
  push:
    paths:
      - 'params/VERSION'
  workflow_dispatch:
  workflow_call:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Get Variables
        id: getvariables
        run: |
            echo ::set-output name=containerName::$(cat params/NAME)
            echo ::set-output name=version::$(cat params/VERSION)
      
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Log in to ghcr.io
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: amd64,arm64
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Build for amd64
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: amd64
          push: false
          pull: true
          load: true
          tags: ${{ secrets.DOCKER_USER }}/${{ steps.getvariables.outputs.containerName }}:amd64, ${{ secrets.DOCKER_USER }}/${{ steps.getvariables.outputs.containerName }}:amd64-${{ steps.getvariables.outputs.version }}, ghcr.io/${{ secrets.DOCKER_USER }}/${{ steps.getvariables.outputs.containerName }}:amd64, ghcr.io/${{ secrets.DOCKER_USER }}/${{ steps.getvariables.outputs.containerName }}:amd64-${{ steps.getvariables.outputs.version }}
          build-args: TABBY_VERSION=${{ steps.getvariables.outputs.version }}
      
      - name: Build for arm64
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: arm64
          push: false
          pull: true
          load: true
          tags: ${{ secrets.DOCKER_USER }}/${{ steps.getvariables.outputs.containerName }}:arm64, ${{ secrets.DOCKER_USER }}/${{ steps.getvariables.outputs.containerName }}:arm64-${{ steps.getvariables.outputs.version }}, ghcr.io/${{ secrets.DOCKER_USER }}/${{ steps.getvariables.outputs.containerName }}:arm64, ghcr.io/${{ secrets.DOCKER_USER }}/${{ steps.getvariables.outputs.containerName }}:arm64-${{ steps.getvariables.outputs.version }}
          build-args: TABBY_VERSION=${{ steps.getvariables.outputs.version }}
     
      - name: List Images
        run: docker images

      - name: Make Manifests
        run: |

            # Make version manifest
            docker manifest create --amend \
            ${{ secrets.DOCKER_USER }}/${{ steps.getvariables.outputs.containerName }}:${{ steps.getvariables.outputs.version }} \
            ${{ secrets.DOCKER_USER }}/${{ steps.getvariables.outputs.containerName }}:amd64-${{ steps.getvariables.outputs.version }} \
            ${{ secrets.DOCKER_USER }}/${{ steps.getvariables.outputs.containerName }}:arm64-${{ steps.getvariables.outputs.version }}

            # Make latest manifest
            docker manifest create --amend \
            ${{ secrets.DOCKER_USER }}/${{ steps.getvariables.outputs.containerName }}:latest \
            ${{ secrets.DOCKER_USER }}/${{ steps.getvariables.outputs.containerName }}:amd64 \
            ${{ secrets.DOCKER_USER }}/${{ steps.getvariables.outputs.containerName }}:arm64

            # Make version manifest for ghcr.io
            docker manifest create --amend \
            ghcr.io/${{ secrets.DOCKER_USER }}/${{ steps.getvariables.outputs.containerName }}:${{ steps.getvariables.outputs.version }} \
            ghcr.io/${{ secrets.DOCKER_USER }}/${{ steps.getvariables.outputs.containerName }}:amd64-${{ steps.getvariables.outputs.version }} \
            ghcr.io/${{ secrets.DOCKER_USER }}/${{ steps.getvariables.outputs.containerName }}:arm64-${{ steps.getvariables.outputs.version }}

            # Make latest manifest for ghcr.io
            docker manifest create --amend \
            ghcr.io/${{ secrets.DOCKER_USER }}/${{ steps.getvariables.outputs.containerName }}:latest \
            ghcr.io/${{ secrets.DOCKER_USER }}/${{ steps.getvariables.outputs.containerName }}:amd64 \
            ghcr.io/${{ secrets.DOCKER_USER }}/${{ steps.getvariables.outputs.containerName }}:arm64

      - name: Push to docker.io
        run: |

            # Push version containers to docker.io
            docker push ${{ secrets.DOCKER_USER }}/${{ steps.getvariables.outputs.containerName }}:amd64-${{ steps.getvariables.outputs.version }} 
            docker push ${{ secrets.DOCKER_USER }}/${{ steps.getvariables.outputs.containerName }}:arm64-${{ steps.getvariables.outputs.version }}
            docker manifest push ${{ secrets.DOCKER_USER }}/${{ steps.getvariables.outputs.containerName }}:${{ steps.getvariables.outputs.version }}

            # Push latest containers to docker.io
            docker push ${{ secrets.DOCKER_USER }}/${{ steps.getvariables.outputs.containerName }}:amd64 
            docker push ${{ secrets.DOCKER_USER }}/${{ steps.getvariables.outputs.containerName }}:arm64
            docker manifest push ${{ secrets.DOCKER_USER }}/${{ steps.getvariables.outputs.containerName }}:latest

      - name: Push to ghcr.io
        run: |

            # Push version containers to ghcr.io
            docker push ghcr.io/${{ secrets.DOCKER_USER }}/${{ steps.getvariables.outputs.containerName }}:amd64-${{ steps.getvariables.outputs.version }} 
            docker push ghcr.io/${{ secrets.DOCKER_USER }}/${{ steps.getvariables.outputs.containerName }}:arm64-${{ steps.getvariables.outputs.version }}
            docker manifest push ghcr.io/${{ secrets.DOCKER_USER }}/${{ steps.getvariables.outputs.containerName }}:${{ steps.getvariables.outputs.version }}

            # Push latest containers to ghcr.io
            docker push ghcr.io/${{ secrets.DOCKER_USER }}/${{ steps.getvariables.outputs.containerName }}:amd64 
            docker push ghcr.io/${{ secrets.DOCKER_USER }}/${{ steps.getvariables.outputs.containerName }}:arm64
            docker manifest push ghcr.io/${{ secrets.DOCKER_USER }}/${{ steps.getvariables.outputs.containerName }}:latest
      
      - name: Cleanup
        run: |

            # Remove manifests
            docker manifest rm \
            ${{ secrets.DOCKER_USER }}/${{ steps.getvariables.outputs.containerName }}:latest \
            ${{ secrets.DOCKER_USER }}/${{ steps.getvariables.outputs.containerName }}:${{ steps.getvariables.outputs.version }} \
            ghcr.io/${{ secrets.DOCKER_USER }}/${{ steps.getvariables.outputs.containerName }}:latest \
            ghcr.io/${{ secrets.DOCKER_USER }}/${{ steps.getvariables.outputs.containerName }}:${{ steps.getvariables.outputs.version }}

            # Remove containers
            docker image rm \
            ${{ secrets.DOCKER_USER }}/${{ steps.getvariables.outputs.containerName }}:amd64 \
            ${{ secrets.DOCKER_USER }}/${{ steps.getvariables.outputs.containerName }}:arm64 \
            ${{ secrets.DOCKER_USER }}/${{ steps.getvariables.outputs.containerName }}:amd64-${{ steps.getvariables.outputs.version }} \
            ${{ secrets.DOCKER_USER }}/${{ steps.getvariables.outputs.containerName }}:arm64-${{ steps.getvariables.outputs.version }} \
            ghcr.io/${{ secrets.DOCKER_USER }}/${{ steps.getvariables.outputs.containerName }}:amd64 \
            ghcr.io/${{ secrets.DOCKER_USER }}/${{ steps.getvariables.outputs.containerName }}:arm64 \
            ghcr.io/${{ secrets.DOCKER_USER }}/${{ steps.getvariables.outputs.containerName }}:amd64-${{ steps.getvariables.outputs.version }} \
            ghcr.io/${{ secrets.DOCKER_USER }}/${{ steps.getvariables.outputs.containerName }}:arm64-${{ steps.getvariables.outputs.version }}

            docker image prune -af
