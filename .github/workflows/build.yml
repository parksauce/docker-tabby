name: Build Container and Push to Docker Hub

on:
  push:
    paths:
      - 'params/VERSION'
  workflow_dispatch:
  workflow_call:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      - 
        name: Get Name
        id: getname
        run: echo ::set-output name=containerName::$(cat params/NAME)
      - 
        name: Get Version
        id: getversion
        run: echo ::set-output name=version::$(cat params/VERSION)
      -
        name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: parksauce
          password: ${{ secrets.DOCKER_TOKEN }}
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: amd64,arm64
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Build for amd64
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: amd64
          push: false
          pull: true
          tags: parksauce/${{ steps.getname.outputs.containerName }}:amd64, parksauce/${{ steps.getname.outputs.containerName }}:amd64-${{ steps.getversion.outputs.version }}
          build-args: TABBY_VERSION=${{ steps.getversion.outputs.version }}
      -
        name: Build for arm64
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: arm64
          push: false
          pull: true
          tags: parksauce/${{ steps.getname.outputs.containerName }}:arm64, parksauce/${{ steps.getname.outputs.containerName }}:arm64-${{ steps.getversion.outputs.version }}
          build-args: TABBY_VERSION=${{ steps.getversion.outputs.version }}
      -
        name: Make Manifest
        run: docker manifest create --amend parksauce/${{ steps.getname.outputs.containerName }}:${{ steps.getversion.outputs.version }} parksauce/${{ steps.getname.outputs.containerName }}:amd64-${{ steps.getversion.outputs.version }} parksauce/${{ steps.getname.outputs.containerName }}:arm64-${{ steps.getversion.outputs.version }}
             docker manifest create --amend parksauce/${{ steps.getname.outputs.containerName }}:latest parksauce/${{ steps.getname.outputs.containerName }}:amd64 parksauce/${{ steps.getname.outputs.containerName }}:arm64
      - 
        name: Test
        run: docker inspect parksauce/${{ steps.getname.outputs.containerName }}:latest
             docker image ls
      -
        name: Cleanup
        run: |
            docker manifest rm parksauce/${{ steps.getname.outputs.containerName }}:latest parksauce/${{ steps.getname.outputs.containerName }}:${{ steps.getversion.outputs.version }}
            docker image rm parksauce/${{ steps.getname.outputs.containerName }}:amd64 parksauce/${{ steps.getname.outputs.containerName }}:arm64 parksauce/${{ steps.getname.outputs.containerName }}:amd64-${{ steps.getversion.outputs.version }} parksauce/${{ steps.getname.outputs.containerName }}:arm64-${{ steps.getversion.outputs.version }}
            docker image prune -f
